# -*- coding: utf-8 -*-
"""AutomacaoGmail.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13rKZKDdwW_PcNT0xkyxgE1qXTI9aJbpS

# Enviando email automaticamente com Python

## Enviando pelo Gmail
"""

import pandas as pd
import numpy as np
import smtplib
import email.message
from google.colab import userdata

# carregar arquivo com os nomes e emails
df = pd.read_csv("sample_data/Nome_email.csv", sep=";")

# Utilizando o padrao smtp (gmail)
# O corpo pode escrito seguindo padroes html (<p>, <h1>, <img>,...) se preferir

def enviar_email(nome, destino):
  corpo_email = f"""
  Olá {nome} este é um email automático
  Estou testando a formatação
  Se a quebra de linha realmente quebra a linha
    do email ou não
  Att,
  Igor
  """


  # Sempre que for enviar email pelo gmail utilizará o "molde":
  msg = email.message.Message()
  # Subject eh o Assunto do email
  msg['Subject'] = "Teste envio automático de email com Python"
  # From eh o seu endereco de email
  msg['From'] = userdata.get('Email')
  # To eh para quem voce enviara o email
  msg['To'] = destino
  # Password eh a senha gerada pelo google (cuidado quando for compartilhar o codigo)
  password = userdata.get('KeyEmail')

  # Adicionando configurações necessárias para o gmail
  msg.add_header('Content-Type', 'text')
  msg.set_payload(corpo_email)
  # 587 é a porta smtp do gmail
  s= smtplib.SMTP('smtp.gmail.com',587)
  s.starttls()


  # Credênciais de login para enviar o email
  s.login(msg['From'], password)
  # Importante passar msg['To'] como uma lista caso envie o email para muitas pessoas
  s.sendmail(msg['From'], [msg['To']], msg.as_string().encode('utf-8'))
  s.quit()
  print(f'Email enviado para {nome} no email: {destino}')

# Iterando sobre as linhas para pegar nome e email (de forma otimizada)
# Celula para enviar os emails
for row in df.itertuples(index=True):
  enviar_email(row.Nome, row.Email)